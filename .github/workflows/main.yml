name: Docker Images Actions

on:
  push:
    branches: [ main ]

jobs:
  ci:
    name: Build & Test
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build images
        run: |
          docker pull postgres:latest
          docker compose build

      - name: Start stack
        run: docker compose up -d

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..12}; do
            docker compose exec -T db pg_isready -U kubsu -d kubsu && break
            echo "Waiting for Postgres: ($i/12)"
            sleep 5
          done

      - name: Run tests in pythonapp container
        run: docker compose exec -T pythonapp pytest -q tests

      - name: Teardown
        if: always()
        run: docker compose down -v

  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: ci
    defaults:
      run:
        shell: bash
    steps:
      - name: Save image to tar
        run: docker save -o pythonapp.tar pythonapp:latest

      - name: Push tar to server
        run: scp -P ${{ secrets.SERVER_PORT }} -o StrictHostKeyChecking=no \
          ./pythonapp.tar ${{ secrets.SERVER_NAME }}@${{ secrets.SERVER }}:/home/${{ secrets.SERVER_NAME }}/tasks/docker

      - name: Start app on server (Podman)
        run: |
          ssh -p ${{ secrets.SERVER_PORT }} -o StrictHostKeyChecking=no \
          ${{ secrets.SERVER_NAME }}@${{ secrets.SERVER }} \
          '
          set -euo pipefail
          cd /home/${{ secrets.SERVER_NAME }}/tasks/docker

          # сеть (если уже есть — не ошибка)
          podman network create mynetwork || true

          # БД
          podman run -d --replace --name db --network mynetwork \
            -e POSTGRES_USER=kubsu \
            -e POSTGRES_PASSWORD=kubsu \
            -e POSTGRES_DB=kubsu \
            -v pgdata:/var/lib/postgresql/data \
            postgres:latest

          # ждём готовность БД
          for i in {1..12}; do
            podman exec -it db pg_isready -U kubsu && break
            echo "waiting for postgres ($i/12)"; sleep 5
          done

          # обновляем приложение
          podman rmi pythonapp:latest || true
          podman load -i pythonapp.tar

          podman run -d --replace --name pythonappcon --network mynetwork \
            -e DATABASE_URL="postgresql+psycopg://kubsu:kubsu@db:5432/kubsu" \
            -p 8115:8115 \
            pythonapp:latest

          rm -f pythonapp.tar

          # небольшая диагностика
          podman ps
          '

      # В случае падения — покажем логи
      - name: Debug logs on failure
        if: failure()
        run: |
          ssh -p ${{ secrets.SERVER_PORT }} -o StrictHostKeyChecking=no \
          ${{ secrets.SERVER_NAME }}@${{ secrets.SERVER }} \
          '
          podman ps -a || true
          echo "== pythonappcon logs =="; podman logs pythonappcon || true
          echo "== db logs ==";          podman logs db || true
          '
